[core]
    editor = vim
    excludesfile = ~/dotfiles/git/gitignore_global

[mailmap]
    file = ZLF_mailmap

[merge]
    tool = meld
[include]
    path = ~/.gitconfig.local

[push]
    default = simple

[alias]
    a       = add -A
    ac      = !git add -A && git commit                     # commit all changes
    b       = branch
    bl      = branch -a                                     # list all branches

    c       = commit
    ca      = commit --amend

    cc      = shortlog -sn                                  # commit count

    co      = checkout
    cob     = checkout -b
    cod     = checkout .

    cts     = commit -m \"Auto-commit: $(date)\"                         # commit with a timestamp as message
    ctsa    = !git add -A && git commit -m \"Auto-commit: $(date)\"      # commit all with a timestamp as message
    ctsap   = !git add -A && git commit -m \"Auto-commit: $(date)\" && git push
                                                            # commit all and push with a timestamp as message
    d       = diff
    dc      = diff --cached

    dt      = diff-tree --no-commit-id --name-status -r     # show a list of changed files for the specified revision
    dth     = diff-tree --no-commit-id --name-status -r HEAD# show a list of changed files for the HEAD

    f       = fetch --all

    p       = push
    pf      = push -f

    pl      = pull
    plr     = pull --rebase
    plf     = !git fetch --all && git reset --hard          # fetch and reset forcefully.
                                                            # add 'origin/branch_name' after to specify the branch

    rs      = remote show                                   # used to get info about remotes
    rso     = remote show origin                            # used to get info about origin
    rv      = remote -v                                     # show configured upstreams

    rsth    = reset --hard HEAD~1                           # remove last commit completely
    rstm    = reset --mixed HEAD~1                          # undo last commit and keep changes as unstaged
    rsts    = reset --soft HEAD~1                           # undo last commit and keep changes as staged

# status aliases
    s       = status
    sa      = status -su                                    # show all changes
                                                            # equivalent to: git status -suall

# stash aliases
    stl     = stash list
    sts     = stash save
    stp     = stash pop
    std     = stash drop

# submodules aliases
    sbur    = submodule update --recursive --remote         # update all submodules recursively, allow custom remotes
    sburi   = submodule update --recursive --remote --init  # init and update all submodules recursively, allow custom remotes
    sbufi   = submodule update --recursive -f --init        # reset all recursively

# log aliases
    lss     = shortlog -nes
    l       = log
    lga     = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset' --date-order --all
                                                            # show a colored commit tree for all refs
    lgc     = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%ci) %C(bold blue)<%an>%Creset' --date-order
                                                            # show a colored commit tree for the current branch

    lupsc   = log @{u}..                                    # show unpushed commits on current branch
    lupsl   = log --branches --not --remotes                # show unpushed commits on all branches (long)
    lupss   = log --branches --not --remotes --simplify-by-decoration --decorate --oneline
                                                            # show unpushed commits on all branches (short)

    luplc   = !git fetch --all && git log ..@{u}            # show unpulled commits on current branch
    lupll   = !git fetch --all && git log --remotes --not --branches
                                                            # show unpulled commits on all branches (long)
    lupls   = !git fetch --all && git log --remotes --not --branches --simplify-by-decoration --decorate --oneline
                                                            # show unpulled commits on all branches (short)

# misc
    confx   = !git config user.name "xyder" && git config user.email "xydr2311@gmail.com"

[gui]
    fontui = -family \"Hack Nerd Font\" -size 14 -weight normal -slant roman -underline 0 -overstrike 0
    fontdiff = -family \"Hack Nerd Font\" -size 14 -weight normal -slant roman -underline 0 -overstrike 0

[user]
	email = xydr2311@gmail.com
	name = xyder
