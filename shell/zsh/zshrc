# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="agnoster"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
ZSH_CUSTOM=~/dotfiles/shell/zsh/custom

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
# plugins:
# - vi-mode - vi mode for omz -- first in list
# - zsh-syntax-highlighting - fish-like syntax highlight - last in line
#
plugins=(git alias-tips zsh-syntax-highlighting zsh-autosuggestions)

if [ -f $HOME/.zsh.local ]; then
    source $HOME/.zsh.local
fi

# User configuration
export PATH=$HOME/bin:/usr/local/bin:$PATH
# export MANPATH="/usr/local/man:$MANPATH"

if [ -f $ZSH/oh-my-zsh.sh ]; then
    source $ZSH/oh-my-zsh.sh
fi

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"


# =============================================================================
qh() {
    # function to show all commands in history that contain the given argument
    # using --color=always to enable colors in the pipe
    # using --color=auto only enables colors if the output is in the terminal
    # using less with -R displays ANSI color sequences in raw form
    # using less with -X to not clear the screen after quitting less
    grep --color=always "$*" "$HISTFILE" | less -RX
}

qt() {
    # function to search for text in current directory
    # using grep with -i to ignore case
    # using grep with -r to search recursively
    grep -ir --color=always "$*" . | less -RX
}

lss() {
    find $1 -maxdepth 1 -type l -ls
}

no-zsh() {
    export OVERRIDE=1
    exec bash
}

wf() {
    echo $#
    if [[ "$1" == "s" && $# -eq 2 ]]; then
        sudo less +F "$2"
    else
        less +F "$1"
    fi
}

tf() {
    echo $#
    if [[ "$1" == "s" && $# -eq 2 ]]; then
        sudo tail -f "$2"
    else
        tail -f "$1"
    fi
}

# custom stuff:
# old version of zsh-autosuggestions required this
# autosuggest-toggle

# MOTD
line=$(printf '%*s' "$(tput cols)" | tr ' ' '=')
bold=$(tput bold)
normal=$(tput sgr0)
echo $line
echo "\t|██╗░░██╗██████╗░███████╗░░░████████╗|"
echo "\t|╚██╗██╔╝██╔══██╗██╔════╝██╗╚══██╔══╝|"
echo "\t|░╚███╔╝░██║░░██║███████╗╚═╝░░░██║░░░|"
echo "\t|░██╔██╗░██║░░██║╚════██║██╗░░░██║░░░|"
echo "\t|██╔╝░██╗██████╔╝███████║╚═╝░░░██║░░░|"
echo "\t|╚═╝░░╚═╝╚═════╝░╚══════╝░░░░░░╚═╝░░░|"

user=$(whoami)
user=$(tr '[:lower:]' '[:upper:]' <<< ${user:0:1})${user:1}
echo $line
echo "    Hello, ${bold}$user${normal}!"
echo $line
echo "    Time\t| $(date +"%T %P %Z - %a, %e %b %G - week %V.")"
echo "    Uptime\t| "${"$(uptime -p)":3}
echo $line
echo "    Local IP\t| $(hostname -I)"
# disabled for speed considerations
# echo "    External IP\t: $(dig +short myip.opendns.com @resolver1.opendns.com)"
echo $line

# alias-tips:
export ZSH_PLUGINS_ALIAS_TIPS_EXPAND=1


# options:
setopt extended_glob

if [ -f $HOME/.aliases ]; then
    source $HOME/.aliases
fi

# load virtualenvwrapper if exists
venvw_path=$(which virtualenvwrapper.sh)
if [ -f $venvw_path ]; then
    # uncomment this to set a custom virtualenv path
    # export WORKON_HOME=/path/to/virtualenv

    echo "Loading VirtualEnvWrapper [$venvw_path] ..."
    source $venvw_path
else
    echo 'WARNING: virtualenvwrapper not found/loaded.'
fi

# vim-like mode stuff
bindkey -v
export KEYTIMEOUT=1  # kill the delay when pressing ESC

